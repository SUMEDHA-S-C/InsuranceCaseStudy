@model Insurance.Models.tbl_policies
@{
    Layout = "~/Views/_LayoutPage1.cshtml";
}


    <div>
        <form method="post">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2 class="form-title">Your Insurance</h2>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="wrapper">
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PlanNumber, "Plan Name", htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.DropDownList("PlanNumber", (IEnumerable<SelectListItem>)ViewBag.PlanNumber, "--Select--", htmlAttributes: new { @class = "form-select", @id = "planNumber", @onblur = "calculatePremium();" })
                                @Html.ValidationMessageFor(model => model.PlanNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PolicyTerm, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PolicyTerm, new { htmlAttributes = new { @class = "form-control", @id = "term", @onblur = "calculatePremium();" } })
                                @Html.ValidationMessageFor(model => model.PolicyTerm, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.SumAssured, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.SumAssured, new { htmlAttributes = new { @class = "form-control", @id = "sum", @onblur = "calculatePremium();" } })
                                @Html.ValidationMessageFor(model => model.SumAssured, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PremiumMode, htmlAttributes: new { @class = "control-label " })
                            <div>
                                <select name="PremiumMode" id="mode" class="form-select" onblur="calculatePremium();">
                                    <option value="null">--select--</option>
                                    <option value="Yearly">Yearly</option>
                                    <option value="Half-Yearly">Half-Yearly</option>
                                    <option value="Quaterly">Quaterly</option>
                                    <option value="Monthly">Monthly</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.InstallementPremium, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.EditorFor(model => model.InstallementPremium, new { htmlAttributes = new { @class = "form-control", @id = "premium" } })
                                @Html.ValidationMessageFor(model => model.InstallementPremium, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Insured, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.DropDownListFor(model => model.Insured, (IEnumerable<SelectListItem>)ViewBag.Insured, "--Select--", htmlAttributes: new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.Insured, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Beneficiary, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.Beneficiary, (IEnumerable<SelectListItem>)ViewBag.Beneficiary, "--Select--", htmlAttributes: new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.Beneficiary, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.DropDownListFor(model => model.Owner, (IEnumerable<SelectListItem>)ViewBag.Owner, "--Select--", htmlAttributes: new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PremiumDueDate, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PremiumDueDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.PremiumDueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PolicyStatus, htmlAttributes: new { @class = "control-label " })
                            <div>
                                @Html.EditorFor(model => model.PolicyStatus, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PolicyStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row justify-content-center">
                        <input type="submit" value="Add Details" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </form>
    </div>
